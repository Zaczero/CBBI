[project]
dependencies = [
  "filecache",
  "fire",
  "httpx[brotli,zstd]",
  "matplotlib",
  "numpy",
  "pandas",
  "pyfiglet",
  "python-telegram-bot",
  "scikit-learn",
  "seaborn",
  "sty",
  "tqdm",
]
name = "cbbi"
requires-python = "~=3.13"
version = "0.0.0"

[tool.uv]
package = false
python-downloads = "never"
python-preference = "only-system"

[tool.setuptools]
packages = ["."]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

indent-width = 4
line-length = 120
target-version = "py313"

[tool.ruff.lint]
ignore = [
  "S101", # assert
]
# see https://docs.astral.sh/ruff/rules/ for rules documentation
select = [
  "A",     # flake8-builtins
  "ARG",   # flake8-unused-argumentsf
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  # "COM", # flake8-commas
  "C4", # flake8-comprehensions
  "E4", # pycodestyle
  "E7",
  "E9",
  "F",  # pyflakes
  # "FBT", # flake8-boolean-trap
  "FLY", # flynt
  # "FURB", # refurb (preview)
  "G",   # flake8-logging-format
  "I",   # isort
  "INT", # flake8-gettext
  # "LOG", # flake8-logging (preview)
  "N",    # pep8-naming
  "NPY",  # numpy
  "PERF", # perflint
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "Q",    # flake8-quotes
  "UP",   # pyupgrade
  # "PL", # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "PYI",  # flake8-pyi
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "S",    # flake8-bandit
  "SIM",  # flake8-simplify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T10",  # flake8-debugger
  # "T20", # flake8-print
  # "TRY", # tryceratops
  "YTT", # flake8-2020
]

fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "lf"

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "open", "type"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.pylint]
max-args = 10
